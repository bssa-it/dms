<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2013
 *
 * DO NOT EDIT.  Generated by GenCode.php
 */
require_once 'CRM/Core/DAO.php';
require_once 'CRM/Utils/Type.php';

class CRM_Dmsextension_DAO_BatchHeader extends CRM_Core_DAO
{
  /**
   * static instance to hold the table name
   *
   * @var string
   * @static
   */
  static $_tableName = 'civicrm_dms_batch_header';
  /**
   * static instance to hold the field values
   *
   * @var array
   * @static
   */
  static $_fields = null;
  /**
   * static instance to hold the keys used in $_fields for each field.
   *
   * @var array
   * @static
   */
  static $_fieldKeys = null;
  /**
   * static instance to hold the FK relationships
   *
   * @var string
   * @static
   */
  static $_links = null;
  /**
   * static instance to hold the values that can
   * be imported
   *
   * @var array
   * @static
   */
  static $_import = null;
  /**
   * static instance to hold the values that can
   * be exported
   *
   * @var array
   * @static
   */
  static $_export = null;
  /**
   * static value to see if we should log any modifications to
   * this table in the civicrm_log table
   *
   * @var boolean
   * @static
   */
  static $_log = true;
  
  /**
   * Unique key
   *
   * @var int unsigned
   */
  public $id;
  /**
   * transaction in the statement table to which this batch is linked
   *
   * @var int
   */
  public $statement_id;	
/**
   * Date on statement
   *
   * @var date
   */
  public $statement_date;	
/**
   * Reference on statement
   *
   * @var varchar
   */
  public $statement_reference;	
/**
   * Value on statement
   *
   * @var decimal
   */
  public $statement_value;	
/**
   * date and time the batch created
   *
   * @var datetime
   */
  public $created_datetime;	
/**
   * User Id that created the batch
   *
   * @var int
   */
  public $created_by;	
/**
   * Title for the batch
   *
   * @var varchar
   */
  public $batch_title;	
/**
   * Type of batch
   *
   * @var varchar
   */
  public $batch_type;	
/**
   * Status of Batch
   *
   * @var varchar
   */
  public $batch_status;	
/**
   * Total value for all entries in batch
   *
   * @var decimal
   */
  public $batch_total;	
/**
   * Office where batch was processed
   *
   * @var int
   */
  public $office_id;	
/**
   * Bank Account to which the deposit was made
   *
   * @var int
   */
  public $bank_account_id;	
/**
   * Date cash and cheques were taken to the bank
   *
   * @var datetime
   */
  public $deposit_date;	
/**
   * Date and time the batch was completed
   *
   * @var datetime
   */
  public $completed_date;	
/**
   * User Id that completed the batch
   *
   * @var int
   */
  public $completed_by;	
  
  
  
  function __construct()
  {
    $this->__table = 'civicrm_dms_batch_header';
    parent::__construct();
  }
  /**
   * returns all the column names of this table
   *
   * @access public
   * @return array
   */
  static function &fields()
  {
    if (!(self::$_fields)) {
      self::$_fields = array(
       'id' => array(
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => ts('ID') ,
          'required' => true,
        ) ,
        
              'statement_id' => array(
              'name' => 'statement_id',
              'title' => ts('statement id'),
              'type' => CRM_Utils_Type::T_INT,
              
            ) ,	

              'statement_date' => array(
              'name' => 'statement_date',
              'title' => ts('statement date'),
              'type' => CRM_Utils_Type::T_DATE,
              
            ) ,	

              'statement_reference' => array(
              'name' => 'statement_reference',
              'title' => ts('statement reference'),
              'type' => CRM_Utils_Type::T_STRING,
              'maxlength' => 150,
            ) ,	

              'statement_value' => array(
              'name' => 'statement_value',
              'title' => ts('statement value'),
              'type' => CRM_Utils_Type::T_MONEY,
              
            ) ,	

              'created_datetime' => array(
              'name' => 'created_datetime',
              'title' => ts('created datetime'),
              'type' => CRM_Utils_Type::T_DATE,
              
            ) ,	

              'created_by' => array(
              'name' => 'created_by',
              'title' => ts('created by'),
              'type' => CRM_Utils_Type::T_INT,
              
            ) ,	

              'batch_title' => array(
              'name' => 'batch_title',
              'title' => ts('batch title'),
              'type' => CRM_Utils_Type::T_STRING,
              'maxlength' => 150,
            ) ,	

              'batch_type' => array(
              'name' => 'batch_type',
              'title' => ts('batch type'),
              'type' => CRM_Utils_Type::T_STRING,
              'maxlength' => 50,
            ) ,	

              'batch_status' => array(
              'name' => 'batch_status',
              'title' => ts('batch status'),
              'type' => CRM_Utils_Type::T_STRING,
              'maxlength' => 50,
            ) ,	

              'batch_total' => array(
              'name' => 'batch_total',
              'title' => ts('batch total'),
              'type' => CRM_Utils_Type::T_MONEY,
              
            ) ,	

              'office_id' => array(
              'name' => 'office_id',
              'title' => ts('office id'),
              'type' => CRM_Utils_Type::T_INT,
              
            ) ,	

              'bank_account_id' => array(
              'name' => 'bank_account_id',
              'title' => ts('bank account id'),
              'type' => CRM_Utils_Type::T_INT,
              
            ) ,	

              'deposit_date' => array(
              'name' => 'deposit_date',
              'title' => ts('deposit date'),
              'type' => CRM_Utils_Type::T_DATE,
              
            ) ,	

              'completed_date' => array(
              'name' => 'completed_date',
              'title' => ts('completed date'),
              'type' => CRM_Utils_Type::T_DATE,
              
            ) ,	

              'completed_by' => array(
              'name' => 'completed_by',
              'title' => ts('completed by'),
              'type' => CRM_Utils_Type::T_INT,
              
            ) ,	

        
      );
    }
    return self::$_fields;
  }
  /**
   * Returns an array containing, for each field, the arary key used for that
   * field in self::$_fields.
   *
   * @access public
   * @return array
   */
  static function &fieldKeys()
  {
    if (!(self::$_fieldKeys)) {
      self::$_fieldKeys = array(
        'id' => 'id',
        'statement_id' => 'statement_id',	
'statement_date' => 'statement_date',	
'statement_reference' => 'statement_reference',	
'statement_value' => 'statement_value',	
'created_datetime' => 'created_datetime',	
'created_by' => 'created_by',	
'batch_title' => 'batch_title',	
'batch_type' => 'batch_type',	
'batch_status' => 'batch_status',	
'batch_total' => 'batch_total',	
'office_id' => 'office_id',	
'bank_account_id' => 'bank_account_id',	
'deposit_date' => 'deposit_date',	
'completed_date' => 'completed_date',	
'completed_by' => 'completed_by',	

      );
    }
    return self::$_fieldKeys;
  }
  /**
   * returns the names of this table
   *
   * @access public
   * @static
   * @return string
   */
  static function getTableName()
  {
    return self::$_tableName;
  }
  /**
   * returns if this table needs to be logged
   *
   * @access public
   * @return boolean
   */
  function getLog()
  {
    return self::$_log;
  }
  /**
   * returns the list of fields that can be imported
   *
   * @access public
   * return array
   * @static
   */
  static function &import($prefix = false)
  {
    if (!(self::$_import)) {
      self::$_import = array();
      $fields = self::fields();
      foreach($fields as $name => $field) {
        if (CRM_Utils_Array::value('import', $field)) {
          if ($prefix) {
            self::$_import['dms_batch_header'] = & $fields[$name];
          } else {
            self::$_import[$name] = & $fields[$name];
          }
        }
      }
    }
    return self::$_import;
  }
  /**
   * returns the list of fields that can be exported
   *
   * @access public
   * return array
   * @static
   */
  static function &export($prefix = false)
  {
    if (!(self::$_export)) {
      self::$_export = array();
      $fields = self::fields();
      foreach($fields as $name => $field) {
        if (CRM_Utils_Array::value('export', $field)) {
          if ($prefix) {
            self::$_export['dms_batch_header'] = & $fields[$name];
          } else {
            self::$_export[$name] = & $fields[$name];
          }
        }
      }
    }
    return self::$_export;
  }
}